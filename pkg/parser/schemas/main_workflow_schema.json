{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Name of the workflow"
    },
    "on": {
      "description": "GitHub Actions workflow triggers",
      "oneOf": [
        {
          "type": "string",
          "description": "Simple trigger event name"
        },
        {
          "type": "object",
          "description": "Complex trigger configuration",
          "properties": {
            "alias": {
              "description": "Alias trigger configuration for @mentions",
              "oneOf": [
                {
                  "type": "null",
                  "description": "Null alias (defaults to filename)"
                },
                {
                  "type": "object",
                  "description": "Alias configuration object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Alias name (defaults to filename without .md extension)"
                    }
                  },
                  "additionalProperties": false
                }
              ]
            },
            "push": {
              "description": "Push event trigger",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "branches": {
                  "type": "array", 
                  "description": "Branches to filter on",
                  "items": {
                    "type": "string"
                  }
                },
                "branches-ignore": {
                  "type": "array",
                  "description": "Branches to ignore",
                  "items": {
                    "type": "string"
                  }
                },
                "paths": {
                  "type": "array",
                  "description": "Paths to filter on",
                  "items": {
                    "type": "string"
                  }
                },
                "paths-ignore": {
                  "type": "array",
                  "description": "Paths to ignore",
                  "items": {
                    "type": "string"
                  }
                },
                "tags": {
                  "type": "array",
                  "description": "Tags to filter on",
                  "items": {
                    "type": "string"
                  }
                },
                "tags-ignore": {
                  "type": "array",
                  "description": "Tags to ignore",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "pull_request": {
              "description": "Pull request event trigger",
              "type": "object",
              "properties": {
                "types": {
                  "type": "array",
                  "description": "Types of pull request events",
                  "items": {
                    "type": "string"
                  }
                },
                "branches": {
                  "type": "array", 
                  "description": "Branches to filter on",
                  "items": {
                    "type": "string"
                  }
                },
                "branches-ignore": {
                  "type": "array",
                  "description": "Branches to ignore",
                  "items": {
                    "type": "string"
                  }
                },
                "paths": {
                  "type": "array",
                  "description": "Paths to filter on",
                  "items": {
                    "type": "string"
                  }
                },
                "paths-ignore": {
                  "type": "array",
                  "description": "Paths to ignore",
                  "items": {
                    "type": "string"
                  }
                },
                "draft": {
                  "type": "boolean",
                  "description": "Filter by draft state. Set to false to ignore draft PRs"
                }
              },
              "additionalProperties": false
            },
            "issues": {
              "description": "Issues event trigger",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "types": {
                  "type": "array",
                  "description": "Types of issue events",
                  "items": {
                    "type": "string",
                    "enum": ["opened", "edited", "deleted", "transferred", "pinned", "unpinned", "closed", "reopened", "assigned", "unassigned", "labeled", "unlabeled", "locked", "unlocked", "milestoned", "demilestoned"]
                  }
                }
              }
            },
            "issue_comment": {
              "description": "Issue comment event trigger",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "types": {
                  "type": "array",
                  "description": "Types of issue comment events",
                  "items": {
                    "type": "string",
                    "enum": ["created", "edited", "deleted"]
                  }
                }
              }
            },
            "schedule": {
              "type": "array",
              "description": "Scheduled trigger events",
              "items": {
                "type": "object",
                "properties": {
                  "cron": {
                    "type": "string",
                    "description": "Cron expression for schedule"
                  }
                },
                "required": ["cron"],
                "additionalProperties": false
              }
            },
            "workflow_dispatch": {
              "description": "Manual workflow dispatch trigger",
              "oneOf": [
                {
                  "type": "null",
                  "description": "Simple workflow dispatch trigger"
                },
                {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "inputs": {
                      "type": "object",
                      "description": "Input parameters for manual dispatch",
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Input description"
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Whether input is required"
                          },
                          "default": {
                            "type": "string",
                            "description": "Default value"
                          },
                          "type": {
                            "type": "string",
                            "enum": ["string", "choice", "boolean"],
                            "description": "Input type"
                          },
                          "options": {
                            "type": "array",
                            "description": "Options for choice type",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "workflow_run": {
              "description": "Workflow run trigger",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "workflows": {
                  "type": "array",
                  "description": "List of workflows to trigger on",
                  "items": {
                    "type": "string"
                  }
                },
                "types": {
                  "type": "array",
                  "description": "Types of workflow run events",
                  "items": {
                    "type": "string",
                    "enum": ["completed", "requested"]
                  }
                },
                "branches": {
                  "type": "array",
                  "description": "Branches to filter on",
                  "items": {
                    "type": "string"
                  }
                },
                "branches-ignore": {
                  "type": "array",
                  "description": "Branches to ignore",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "release": {
              "description": "Release event trigger",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "types": {
                  "type": "array",
                  "description": "Types of release events",
                  "items": {
                    "type": "string",
                    "enum": ["published", "unpublished", "created", "edited", "deleted", "prereleased", "released"]
                  }
                }
              }
            },
            "pull_request_review_comment": {
              "description": "Pull request review comment event trigger",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "types": {
                  "type": "array",
                  "description": "Types of pull request review comment events",
                  "items": {
                    "type": "string",
                    "enum": ["created", "edited", "deleted"]
                  }
                }
              }
            },
            "stop-after": {
              "type": "string",
              "description": "Time when workflow should stop running. Supports multiple formats: absolute dates (YYYY-MM-DD HH:MM:SS, June 1 2025, 1st June 2025, 06/01/2025, etc.) or relative time deltas (+25h, +3d, +1d12h30m)"
            },
            "reaction": {
              "type": "string",
              "enum": ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
              "description": "AI reaction to add/remove on triggering item (one of: +1, -1, laugh, confused, heart, hooray, rocket, eyes). Defaults to 'eyes' if not specified."
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "permissions": {
      "description": "You can modify the default permissions granted to the GITHUB_TOKEN, adding or removing access as required, so that you only allow the minimum required access.",
      "oneOf": [
        {
          "type": "string",
          "enum": ["read-all", "write-all", "read", "write"],
          "description": "Simple permissions string"
        },
        {
          "type": "object",
          "description": "Detailed permissions object",
          "additionalProperties": false,
          "properties": {
            "actions": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "attestations": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "checks": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "contents": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "deployments": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "discussions": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "id-token": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "issues": {
              "type": "string", 
              "enum": ["read", "write", "none"]
            },
            "models": {
              "type": "string",
              "enum": ["read", "none"]
            },
            "packages": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "pages": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "pull-requests": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "repository-projects": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "security-events": {
              "type": "string",
              "enum": ["read", "write", "none"]
            },
            "statuses": {
              "type": "string",
              "enum": ["read", "write", "none"]
            }
          }
        }
      ]
    },
    "run-name": {
      "type": "string",
      "description": "Custom run name for the workflow"
    },
    "defaults": {
      "type": "object",
      "description": "Default settings that will apply to all jobs in the workflow",
      "additionalProperties": false,
      "properties": {
        "run": {
          "type": "object",
          "description": "Default shell and working directory",
          "additionalProperties": false,
          "properties": {
            "shell": {
              "type": "string",
              "description": "Default shell for run steps"
            },
            "working-directory": {
              "type": "string",
              "description": "Default working directory for run steps"
            }
          }
        }
      }
    },
    "jobs": {
      "type": "object",
      "description": "Groups together all the jobs that run in the workflow",
      "additionalProperties": {
        "type": "object",
        "description": "Job definition",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the job"
          },
          "runs-on": {
            "oneOf": [
              {
                "type": "string",
                "description": "Runner type as string"
              },
              {
                "type": "array",
                "description": "Runner type as array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "object",
                "description": "Runner type as object",
                "additionalProperties": false
              }
            ]
          },
          "steps": {
            "type": "array",
            "description": "Job steps",
            "items": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "if": {
            "type": "string",
            "description": "Conditional execution for the job"
          },
          "needs": {
            "oneOf": [
              {
                "type": "string",
                "description": "Single job dependency"
              },
              {
                "type": "array",
                "description": "Multiple job dependencies",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "env": {
            "type": "object",
            "description": "Environment variables for the job",
            "additionalProperties": {
              "type": "string"
            }
          },
          "permissions": {
            "$ref": "#/properties/permissions"
          },
          "timeout-minutes": {
            "type": "integer",
            "description": "Job timeout in minutes"
          },
          "strategy": {
            "type": "object",
            "description": "Matrix strategy for the job",
            "additionalProperties": false
          },
          "continue-on-error": {
            "type": "boolean",
            "description": "Continue workflow on job failure"
          },
          "container": {
            "type": "object",
            "description": "Container to run the job in",
            "additionalProperties": false
          },
          "services": {
            "type": "object",
            "description": "Service containers for the job",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "outputs": {
            "type": "object",
            "description": "Job outputs",
            "additionalProperties": {
              "type": "string"
            }
          },
          "defaults": {
            "$ref": "#/properties/defaults"
          },
          "concurrency": {
            "$ref": "#/properties/concurrency"
          }
        }
      }
    },
    "runs-on": {
      "oneOf": [
        {
          "type": "string",
          "description": "Runner type as string"
        },
        {
          "type": "array",
          "description": "Runner type as array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "object",
          "description": "Runner type as object",
          "additionalProperties": false,
          "properties": {
            "group": {
              "type": "string",
              "description": "Runner group"
            },
            "labels": {
              "type": "array",
              "description": "Runner labels",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "timeout_minutes": {
      "type": "integer",
      "description": "Timeout in minutes for the workflow"
    },
    "concurrency": {
      "oneOf": [
        {
          "type": "string",
          "description": "Simple concurrency group name"
        },
        {
          "type": "object",
          "description": "Concurrency configuration object",
          "additionalProperties": false,
          "properties": {
            "group": {
              "type": "string",
              "description": "Concurrency group name"
            },
            "cancel-in-progress": {
              "type": "boolean",
              "description": "Cancel in-progress jobs in the same concurrency group"
            }
          },
          "required": ["group"]
        }
      ]
    },
    "env": {
      "description": "Environment variables for the workflow",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        {
          "type": "string"
        }
      ]
    },
    "if": {
      "type": "string",
      "description": "Conditional execution expression"
    },
    "steps": {
      "description": "Custom workflow steps",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": true
        },
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "additionalProperties": true
              }
            ]
          }
        }
      ]
    },
    "post-steps": {
      "description": "Custom workflow steps to run after AI execution",
      "oneOf": [
        {
          "type": "object",
          "additionalProperties": true
        },
        {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "additionalProperties": true
              }
            ]
          }
        }
      ]
    },
    "engine": {
      "description": "AI engine configuration",
      "oneOf": [
        {
          "type": "string",
          "enum": ["claude", "codex"],
          "description": "Simple engine name (claude or codex)"
        },
        {
          "type": "object",
          "description": "Extended engine configuration object",
          "properties": {
            "id": {
              "type": "string",
              "enum": ["claude", "codex"],
              "description": "Agent CLI identifier (claude or codex)"
            },
            "version": {
              "type": "string",
              "description": "Optional version of the action"
            },
            "model": {
              "type": "string", 
              "description": "Optional LLM model to use"
            },
            "permissions": {
              "type": "object",
              "description": "Engine-level permissions configuration",
              "properties": {
                "network": {
                  "type": "object",
                  "description": "Network access control for the engine",
                  "properties": {
                    "allowed": {
                      "type": "array",
                      "description": "List of allowed domains for network access",
                      "items": {
                        "type": "string",
                        "description": "Domain name (supports wildcards with * prefix)"
                      }
                    }
                  },
                  "required": ["allowed"],
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "required": ["id"],
          "additionalProperties": false
        }
      ]
    },
    "max-turns": {
      "type": "integer",
      "description": "Maximum number of chat iterations per run"
    },
    "claude": {
      "description": "Claude-specific configuration",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "model": {
          "type": "string",
          "description": "Claude model to use"
        },
        "version": {
          "type": "string",
          "description": "Claude version"
        },
        "allowed": {
          "description": "Allowed Claude tools",
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "type": "object",
              "additionalProperties": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "tools": {
      "type": "object",
      "description": "Tools configuration for the workflow",
      "properties": {
        "github": {
          "description": "GitHub tools configuration",
          "oneOf": [
            {
              "type": "string",
              "description": "Simple github tool string"
            },
            {
              "type": "object",
              "description": "GitHub tools object configuration",
              "properties": {
                "allowed": {
                  "type": "array",
                  "description": "List of allowed GitHub tools",
                  "items": {
                    "type": "string"
                  }
                },
                "use_docker_mcp": {
                  "type": "boolean",
                  "description": "Whether to use Docker MCP for GitHub tools"
                },
                "docker_image_version": {
                  "type": "string",
                  "description": "Docker image version for GitHub MCP server"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "claude": {
          "description": "Claude tools configuration",
          "oneOf": [
            {
              "type": "string",
              "description": "Simple claude tool string"
            },
            {
              "type": "object",
              "description": "Claude tools object configuration",
              "properties": {
                "allowed": {
                  "description": "Allowed Claude tools",
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          ]
        }
      },
      "additionalProperties": {
        "description": "Custom tool configuration",
        "oneOf": [
          {
            "type": "string",
            "description": "Simple tool string"
          },
          {
            "type": "object",
            "description": "Custom tool object configuration",
            "properties": {
              "mcp": {
                "description": "MCP server configuration",
                "additionalProperties": true
              },
              "allowed": {
                "type": "array",
                "description": "List of allowed tool functions",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        ]
      }
    },
    "alias": {
      "type": "string",
      "description": "Alias name for the workflow"
    },
    "cache": {
      "description": "Cache configuration for workflow (uses actions/cache syntax)",
      "oneOf": [
        {
          "type": "object",
          "description": "Single cache configuration",
          "properties": {
            "key": {
              "type": "string",
              "description": "An explicit key for restoring and saving the cache"
            },
            "path": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "A single path to cache"
                },
                {
                  "type": "array",
                  "description": "Multiple paths to cache",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "restore-keys": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "A single restore key"
                },
                {
                  "type": "array",
                  "description": "Multiple restore keys",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            },
            "upload-chunk-size": {
              "type": "integer",
              "description": "The chunk size used to split up large files during upload, in bytes"
            },
            "fail-on-cache-miss": {
              "type": "boolean",
              "description": "Fail the workflow if cache entry is not found"
            },
            "lookup-only": {
              "type": "boolean",
              "description": "If true, only checks if cache entry exists and skips download"
            }
          },
          "required": ["key", "path"],
          "additionalProperties": false
        },
        {
          "type": "array",
          "description": "Multiple cache configurations",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "An explicit key for restoring and saving the cache"
              },
              "path": {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "A single path to cache"
                  },
                  {
                    "type": "array",
                    "description": "Multiple paths to cache",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              },
              "restore-keys": {
                "oneOf": [
                  {
                    "type": "string",
                    "description": "A single restore key"
                  },
                  {
                    "type": "array",
                    "description": "Multiple restore keys",
                    "items": {
                      "type": "string"
                    }
                  }
                ]
              },
              "upload-chunk-size": {
                "type": "integer",
                "description": "The chunk size used to split up large files during upload, in bytes"
              },
              "fail-on-cache-miss": {
                "type": "boolean",
                "description": "Fail the workflow if cache entry is not found"
              },
              "lookup-only": {
                "type": "boolean",
                "description": "If true, only checks if cache entry exists and skips download"
              }
            },
            "required": ["key", "path"],
            "additionalProperties": false
          }
        }
      ]
    },
    "safe-outputs": {
      "type": "object",
      "description": "Output configuration for automatic safe outputs",
      "properties": {
        "allowed-domains": {
          "type": "array",
          "description": "List of allowed domains for URI filtering in agentic workflow output",
          "items": {
            "type": "string"
          }
        },
        "create-issue": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for creating GitHub issues from agentic workflow output",
              "properties": {
                "title-prefix": {
                  "type": "string",
                  "description": "Optional prefix for the issue title"
                },
                "labels": {
                  "type": "array",
                  "description": "Optional list of labels to attach to the issue",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable issue creation with default configuration"
            }
          ]
        },
        "create-issues": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for creating GitHub issues from agentic workflow output (plural form)",
              "properties": {
                "title-prefix": {
                  "type": "string",
                  "description": "Optional prefix for the issue title"
                },
                "labels": {
                  "type": "array",
                  "description": "Optional list of labels to attach to the issue",
                  "items": {
                    "type": "string"
                  }
                },
                "max": {
                  "type": "integer",
                  "description": "Maximum number of issues to create (default: 10)",
                  "minimum": 1,
                  "maximum": 100
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable issue creation with default configuration (max: 10)"
            }
          ]
        },
        "add-issue-comment": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for creating GitHub issue/PR comments from agentic workflow output",
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable issue comment creation with default configuration"
            }
          ]
        },
        "add-issue-comments": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for creating GitHub issue/PR comments from agentic workflow output (plural form)",
              "properties": {
                "max": {
                  "type": "integer",
                  "description": "Maximum number of comments to create (default: 10)",
                  "minimum": 1,
                  "maximum": 100
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable issue comment creation with default configuration (max: 10)"
            }
          ]
        },
        "create-pull-request": {
          "oneOf": [
            {
              "type": "object",
              "description": "Configuration for creating GitHub pull requests from agentic workflow output",
              "properties": {
                "title-prefix": {
                  "type": "string",
                  "description": "Optional prefix for the pull request title"
                },
                "labels": {
                  "type": "array",
                  "description": "Optional list of labels to attach to the pull request",
                  "items": {
                    "type": "string"
                  }
                },
                "draft": {
                  "type": "boolean",
                  "description": "Whether to create pull request as draft (defaults to true)"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "null",
              "description": "Enable pull request creation with default configuration"
            }
          ]
        },
        "add-issue-labels": {
          "oneOf": [
            {
              "type": "null",
              "description": "Null configuration allows any labels"
            },
            {
              "type": "object",
              "description": "Configuration for adding labels to issues/PRs from agentic workflow output",
              "properties": {
                "allowed": {
                  "type": "array",
                  "description": "Optional list of allowed labels that can be added. If omitted, any labels are allowed (including creating new ones).",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1
                },
                "max-count": {
                  "type": "integer",
                  "description": "Optional maximum number of labels to add (default: 3)",
                  "minimum": 1
                }
              },
              "additionalProperties": false
            }
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "additionalProperties": false
}