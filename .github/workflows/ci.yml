name: CI

on: [push, pull_request]
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Verify dependencies
        run: go mod verify

      - name: Run tests with coverage
        run: make test-coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.html

  build:
    name: Build Code and Recompile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Build code
        run: make build

      - name: Rebuild lock files
        run: make recompile

      - name: Check for changes in generated files
        run: |
          git diff .github/workflows/*.lock.yml

      - name: Check for uncommitted workflow changes
        run: |
          if [ -n "$(git status --porcelain .github/workflows/*.yml)" ]; then
            echo "Error: Found uncommitted changes in workflow files:"
            exit 1
          fi
  js:
    name: Build JavaScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          cache: npm
      - name: Install npm dependencies
        run: npm ci
      - name: Run tests
        run: npm test
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Install minimal dependencies
        run: |
          go mod download
          go mod tidy

      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

      - name: Check formatting
        run: make fmt-check
